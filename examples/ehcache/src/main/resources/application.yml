management:
  endpoints:
    web:
      exposure:
        include: "*"
  prometheus:
    enabled: true
spring:
  cache:
    jcache:
      config: classpath:ehcache.xml
bucket4j:
  enabled: true
  filter-config-caching-enabled: true
  filter-config-cache-name: filterConfigCache
  filters:
  - id: filter1
    major-version: 1
    cache-name: buckets
    filter-method: servlet
    filter-order: -200
    http-content-type: application/json;charset=UTF-8
    url-pattern: .*
    metrics:
      tags:
      - key: USERNAME
        expression: "@securityService.username() != null ? @securityService.username() : 'anonym'"
      - key: URL
        expression: getRequestURI()
    rate-limits:
    - bandwidths:
      - capacity: 30
        time: 1
        unit: minutes
  - id: filter2
    major-version: 1
    cache-name: buckets
    filter-method: servlet
    filter-order: 1
    http-content-type: application/json;charset=UTF-8
    url-pattern: .*
    metrics:
      tags:
        - key: USERNAME
          expression: "@securityService.username() != null ? @securityService.username() : 'anonym'"
        - key: URL
          expression: getRequestURI()
    rate-limits:
    - execute-condition:  "@securityService.username() == 'admin'"
      skip-condition: "getRequestURI().contains('filter')"
      cache-key: "@securityService.username()?: getRemoteAddr()"
      bandwidths:
      - capacity: 30
        time: 1
        unit: minutes
    - execute-condition: "@securityService.username() != 'admin'"
      skip-condition: "getRequestURI().contains('filter')"
      cache-key: "@securityService.username()?: getRemoteAddr()"
      bandwidths:
      - capacity: 5
        time: 1
        unit: minutes